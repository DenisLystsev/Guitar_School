/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}sub,sup{line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=button]::-moz-focus-inner,[type=reset],[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}html{height:100%;font-family:Montserrat}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}.container{max-width:1140px;width:100%;margin:0 auto}.nav-menu__menu{margin-top:21px}.nav-menu__item{display:inline;margin-right:66px;font-weight:600;font-size:18px;line-height:22px}.nav-menu__item:last-child{margin-right:0}.icons-container{display:flex}.icons-container__item{width:40px;height:40px;border:1px solid #488aea;border-radius:50%;background-color:#e2e2e2;display:inherit;justify-content:center;align-items:center;margin-right:17px}.icons-container__item:last-child{margin-right:0}.icons-container__item i{font-size:21px}.title{font-weight:600;font-size:72px;line-height:68px}.title__line{width:65px;border-top:1px solid #000}.buttons{display:flex;align-items:start}.buttons__main-button{width:200px;height:60px;background:#f28b64;box-shadow:0 4px 4px rgba(0,0,0,.25);border-radius:100px;border:none;margin-right:32px}.buttons__button-text{font-weight:600;font-size:18px;line-height:19px;color:#fff}.buttons__chat{display:flex;align-items:center;border:none}.buttons__chat-logo{margin-right:12px}.buttons__chat-text{text-align:left;font-weight:300;font-size:16px;line-height:17px}.section-one{height:880px;background-color:#f0f0f0;position:relative;overflow:hidden}.section-one__wrapper{padding-top:16px}.section-one__header{display:flex;justify-content:space-between}.section-one__content-wrapper{display:flex;position:relative}.section-one__figure{position:relative}.section-one__figure-item{height:220px;border-radius:100px;box-shadow:0 4px 4px rgba(0,0,0,.25);position:absolute}.section-one__figure-item_orange{background-color:#f28b64;width:618.43px;transform:rotate(-50.81deg);top:147px;left:-50px}.section-one__figure-item_blue{background-color:#5290ea;width:565.95px;transform:rotate(-64deg);top:142px;left:-73px}.section-one__figure-item_grey{background-color:#e2e2e2;width:608.97px;transform:rotate(-36.15deg);top:185px;left:-10px}.section-one__img{position:relative;z-index:5}.section-one__right-box{width:372px;position:absolute;left:715px;top:150px}.section-one__icons{margin-bottom:3px;padding-left:10px}.section-one__title{margin-bottom:5px}.section-one__text{font-weight:400;font-size:16px;line-height:20px;margin-bottom:20px}.section-one__small-ring{position:absolute;top:211px;right:365px}.section-one__big-ring{position:absolute;top:734px;right:-137px}.ring{width:194px;height:194px;background:linear-gradient(143.92deg,rgba(237,123,80,.5) 14.85%,rgba(72,138,234,.5) 53.25%,rgba(44,44,44,.5) 85.74%);display:flex;justify-content:center;align-items:center;border-radius:50%}.ring_big{width:282px;height:282px;z-index:0;transform:rotate(45deg)}.ring__inside-circle{width:129px;height:129px;background-color:#e5e5e5;border-radius:50%;display:flex;z-index:0}.ring__inside-circle_big{width:188px;height:188px}.section-two{height:700px;background-color:#fff}.section-two__title{margin-bottom:40px}.section-two__cards-wrapper{margin-bottom:28px}.cards{display:flex}.cards__item{width:360px;height:360px;border-radius:10px;filter:drop-shadow(0 4px 4px rgba(0, 0, 0, .25));margin-right:30px}.cards__item:last-child{margin-right:0}.cards__item_grey{background-color:#e2e2e2}.cards__item_orange{background-color:#f28b64}.cards__item_blue{background-color:#5290ea}.line-box{display:flex;justify-content:space-around}.line-box__icon{margin-right:20px}.line-box__item{display:flex;align-items:center}.line-box__number{font-weight:600;font-size:48px}.line-box__text{width:139px;font-weight:400;font-size:18px;line-height:22px}.section-three{height:640px;background-color:#f0f0f0}.footer{background-color:#fff;height:272px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
